// –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–∞–≤ —Å–æ —Å—Ç–∞—Ä—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
// –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node scripts/remove_old_users.js

import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !supabaseServiceKey) {
  console.error(
    '‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å SUPABASE_URL –∏ SUPABASE_SERVICE_ROLE_KEY'
  );
  process.exit(1);
}

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç —Å service role key –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
const supabase = createClient(supabaseUrl, supabaseServiceKey, {
  auth: {
    autoRefreshToken: false,
    persistSession: false,
  },
});

// –°—Ç–∞—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
const oldUsers = ['admin@a6jrm.org', 'user@a6jrm.org'];

async function removeUserFromUsersTable(email) {
  try {
    console.log(`üîÑ –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${email} –∏–∑ —Ç–∞–±–ª–∏—Ü—ã users...`);

    const { error } = await supabase.from('users').delete().eq('email', email);

    if (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è ${email}:`, error.message);
      return false;
    }

    console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${email} —É–¥–∞–ª–µ–Ω –∏–∑ —Ç–∞–±–ª–∏—Ü—ã users`);
    return true;
  } catch (error) {
    console.error(`‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è ${email}:`, error.message);
    return false;
  }
}

async function deactivateUserInAuth(email) {
  try {
    console.log(`üîÑ –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${email} –≤ auth.users...`);

    // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const { data: authUsers } = await supabase.auth.admin.listUsers();
    const user = authUsers.users.find(u => u.email === email);

    if (!user) {
      console.log(`‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${email} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ auth.users`);
      return true;
    }

    // –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º banned_until)
    const { error } = await supabase.auth.admin.updateUserById(user.id, {
      ban_duration: '876000h', // ~100 –ª–µ—Ç
    });

    if (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ ${email}:`, error.message);
      return false;
    }

    console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${email} –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –≤ auth.users`);
    return true;
  } catch (error) {
    console.error(`‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è ${email}:`, error.message);
    return false;
  }
}

async function showCurrentUsers() {
  try {
    console.log('\nüìã –¢–µ–∫—É—â–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:');

    const { data: users, error } = await supabase
      .from('users')
      .select('email, role, full_name, created_at')
      .order('role', { ascending: false })
      .order('email');

    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error.message);
      return;
    }

    if (users.length === 0) {
      console.log('   –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    } else {
      users.forEach(user => {
        console.log(`   ${user.email} (${user.role}) - ${user.full_name}`);
      });
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error.message);
  }
}

async function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...\n');

  for (const email of oldUsers) {
    try {
      console.log(`\nüìß –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: ${email}`);

      // –£–¥–∞–ª—è–µ–º –∏–∑ —Ç–∞–±–ª–∏—Ü—ã users
      await removeUserFromUsersTable(email);

      // –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤ auth.users
      await deactivateUserInAuth(email);

      console.log(`‚úÖ ${email} –æ–±—Ä–∞–±–æ—Ç–∞–Ω`);
    } catch (error) {
      console.error(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è ${email}:`, error.message);
    }
  }

  console.log('\nüéâ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω!');

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  await showCurrentUsers();

  console.log('\nüí° –°—Ç–∞—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ —Å–∏—Å—Ç–µ–º—ã!');
}

main().catch(console.error);
