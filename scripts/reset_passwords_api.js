// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª–µ–π —á–µ—Ä–µ–∑ Supabase API
// –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node scripts/reset_passwords_api.js

import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !supabaseServiceKey) {
  console.error(
    '‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å SUPABASE_URL –∏ SUPABASE_SERVICE_ROLE_KEY'
  );
  process.exit(1);
}

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç —Å service role key –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
const supabase = createClient(supabaseUrl, supabaseServiceKey, {
  auth: {
    autoRefreshToken: false,
    persistSession: false,
  },
});

async function resetUserPassword(email) {
  try {
    console.log(`üîÑ –°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è –¥–ª—è: ${email}`);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º recovery email
    const { data, error } = await supabase.auth.admin.generateLink({
      type: 'recovery',
      email: email,
      options: {
        redirectTo: `${process.env.SUPABASE_URL}/auth/callback`,
      },
    });

    if (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –¥–ª—è ${email}:`, error.message);
      return false;
    }

    console.log(`‚úÖ Recovery link —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –¥–ª—è ${email}`);
    console.log(`üîó –°—Å—ã–ª–∫–∞: ${data.properties.action_link}`);

    return true;
  } catch (error) {
    console.error(`‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è ${email}:`, error.message);
    return false;
  }
}

async function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª–µ–π...\n');

  const users = ['m.a.sugak@gmail.com', 'rts@a6jrm.org'];

  for (const email of users) {
    await resetUserPassword(email);
    console.log(''); // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
  }

  console.log('‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω!');
  console.log('üìß –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–∞—Ç email —Å —Å—Å—ã–ª–∫–∞–º–∏ –¥–ª—è —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è');
}

main().catch(console.error);
