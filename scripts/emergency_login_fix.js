// –≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–æ–≥–∏–Ω–∞
// –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node scripts/emergency_login_fix.js

import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !supabaseServiceKey) {
  console.error(
    '‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å SUPABASE_URL –∏ SUPABASE_SERVICE_ROLE_KEY'
  );
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseServiceKey, {
  auth: {
    autoRefreshToken: false,
    persistSession: false,
  },
});

async function emergencyFix() {
  console.log('üö® –≠–ö–°–¢–†–ï–ù–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –õ–û–ì–ò–ù–ê\n');

  try {
    // 1. –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–Ω–æ–≤–æ
    console.log('üîÑ –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');

    const users = [
      {
        email: 'm.a.sugak@gmail.com',
        password: 'Admin123!',
        role: 'superadmin',
      },
      {
        email: 'rts@a6jrm.org',
        password: 'User123!',
        role: 'reader',
      },
    ];

    for (const user of users) {
      console.log(`\nüìß –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: ${user.email}`);

      // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const { data: existingUsers } = await supabase.auth.admin.listUsers();
      const existingUser = existingUsers.users.find(
        u => u.email === user.email
      );

      if (existingUser) {
        console.log(`üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user.email}`);
        await supabase.auth.admin.deleteUser(existingUser.id);
      }

      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      console.log(`‚ûï –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user.email}`);
      const { data: newUser, error: createError } =
        await supabase.auth.admin.createUser({
          email: user.email,
          password: user.password,
          email_confirm: true,
        });

      if (createError) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${createError.message}`);
        continue;
      }

      console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: ${user.email}`);

      // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Ç–∞–±–ª–∏—Ü—É users
      const { error: roleError } = await supabase.from('users').upsert({
        id: newUser.user.id,
        email: user.email,
        role: user.role,
        full_name: user.role === 'superadmin' ? 'Admin User' : 'Regular User',
        updated_at: new Date().toISOString(),
      });

      if (roleError) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ —Ä–æ–ª–∏: ${roleError.message}`);
      } else {
        console.log(`‚úÖ –†–æ–ª—å ${user.role} –Ω–∞–∑–Ω–∞—á–µ–Ω–∞`);
      }
    }

    console.log('\nüéâ –≠–ö–°–¢–†–ï–ù–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!');
    console.log('\nüìã –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:');
    console.log('   m.a.sugak@gmail.com / Admin123!');
    console.log('   rts@a6jrm.org / User123!');

    console.log('\nüí° –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ!');
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
  }
}

emergencyFix().catch(console.error);
