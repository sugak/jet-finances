<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <title>Login · Jet Finances</title>
    
    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" crossorigin="anonymous">
    
    <!-- Bootstrap Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" crossorigin="anonymous">
    
    <style>
      body {
        background: white;
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      }
      
      .login-container {
        background: white;
        border-radius: 16px;
        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        padding: 2rem;
        width: 100%;
        max-width: 400px;
        margin: 1rem;
      }
      
      .logo {
        text-align: center;
        margin-bottom: 2rem;
      }
      
      .logo img {
        max-width: 120px;
        height: auto;
      }
      
      .login-header {
        text-align: center;
        margin-bottom: 2rem;
      }
      
      .login-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: #1f2937;
        margin-bottom: 0.5rem;
      }
      
      .login-subtitle {
        color: #6b7280;
        font-size: 0.875rem;
      }
      
      .form-group {
        margin-bottom: 1.5rem;
      }
      
      .form-label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 500;
        color: #374151;
        font-size: 0.875rem;
      }
      
      .form-control {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #d1d5db;
        border-radius: 8px;
        font-size: 0.875rem;
        transition: all 0.2s ease;
        background-color: white;
      }
      
      .form-control:focus {
        outline: none;
        border-color: #3b82f6;
        box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
      }
      
      .btn-login {
        width: 100%;
        padding: 0.75rem;
        background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
        color: white;
        border: none;
        border-radius: 8px;
        font-weight: 500;
        font-size: 0.875rem;
        cursor: pointer;
        transition: all 0.2s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
      }
      
      .btn-login:hover:not(:disabled) {
        background: linear-gradient(135deg, #2563eb 0%, #1e40af 100%);
        transform: translateY(-1px);
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
      }
      
      .btn-login:disabled {
        opacity: 0.6;
        cursor: not-allowed;
        transform: none;
      }
      
      .error-message {
        background-color: #fef2f2;
        border: 1px solid #fecaca;
        color: #dc2626;
        padding: 0.75rem;
        border-radius: 8px;
        font-size: 0.875rem;
        margin-bottom: 1rem;
        display: none;
      }
      
      .loading-spinner {
        width: 16px;
        height: 16px;
        border: 2px solid transparent;
        border-top: 2px solid currentColor;
        border-radius: 50%;
        animation: spin 1s linear infinite;
      }
      
      @keyframes spin {
        to { transform: rotate(360deg); }
      }
      
      .remember-me {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin-bottom: 1.5rem;
      }
      
      .remember-me input[type="checkbox"] {
        width: 16px;
        height: 16px;
        accent-color: #3b82f6;
      }
      
      .remember-me label {
        font-size: 0.875rem;
        color: #6b7280;
        cursor: pointer;
      }
    </style>
  </head>
  <body>
    <div class="login-container">
      <div class="logo">
        <svg width="120" height="120" viewBox="0 0 120 120" fill="none" xmlns="http://www.w3.org/2000/svg">
          <!-- Circular background with gradient -->
          <defs>
            <linearGradient id="gradient" x1="0%" y1="0%" x2="100%" y2="100%">
              <stop offset="0%" style="stop-color:#20B2AA;stop-opacity:1" />
              <stop offset="100%" style="stop-color:#32CD32;stop-opacity:1" />
            </linearGradient>
          </defs>
          <circle cx="60" cy="60" r="55" fill="url(#gradient)" stroke="white" stroke-width="2"/>
          
          <!-- Stylized waves/flowing elements -->
          <path d="M25 45 Q35 35, 45 45 T65 45 T85 45 T95 45" stroke="white" stroke-width="4" fill="none" stroke-linecap="round"/>
          <path d="M25 60 Q35 50, 45 60 T65 60 T85 60 T95 60" stroke="white" stroke-width="4" fill="none" stroke-linecap="round"/>
          <path d="M25 75 Q35 65, 45 75 T65 75 T85 75 T95 75" stroke="white" stroke-width="4" fill="none" stroke-linecap="round"/>
        </svg>
      </div>
      
      <div class="login-header">
        <h1 class="login-title">Jet Finances</h1>
        <p class="login-subtitle">Sign in to your account</p>
      </div>
      
      <div id="error-message" class="error-message">
        <i class="bi bi-exclamation-triangle me-2"></i>
        <span id="error-text"></span>
      </div>
      
      <form id="login-form">
        <div class="form-group">
          <label for="email" class="form-label">Email</label>
          <input 
            type="email" 
            id="email" 
            name="email" 
            class="form-control" 
            placeholder="Enter your email"
            required
            autocomplete="email"
          >
        </div>
        
        <div class="form-group">
          <label for="password" class="form-label">Password</label>
          <input 
            type="password" 
            id="password" 
            name="password" 
            class="form-control" 
            placeholder="Enter your password"
            required
            autocomplete="current-password"
          >
        </div>
        
        <div class="remember-me">
          <input type="checkbox" id="remember" name="remember">
          <label for="remember">Remember me</label>
        </div>
        
        <button type="submit" class="btn-login" id="login-btn">
          <span id="btn-text">Sign In</span>
          <div id="btn-spinner" class="loading-spinner" style="display: none;"></div>
        </button>
      </form>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2"></script>
    
    <script>
      // Supabase configuration
      const SUPABASE_URL = '<%= process.env.SUPABASE_URL %>';
      const SUPABASE_ANON_KEY = '<%= process.env.SUPABASE_ANON_KEY %>';
      
      // Debug info
      console.log('Environment variables:');
      console.log('SUPABASE_URL:', SUPABASE_URL);
      console.log('SUPABASE_ANON_KEY:', SUPABASE_ANON_KEY ? 'SET' : 'NOT SET');
      
      if (!SUPABASE_URL || !SUPABASE_ANON_KEY) {
        console.error('❌ Supabase credentials missing!');
        alert('Configuration error: Supabase credentials not found');
        throw new Error('Supabase credentials not found');
      }
      
      const supabase = window.supabase.createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
      
      // DOM elements
      const loginForm = document.getElementById('login-form');
      const loginBtn = document.getElementById('login-btn');
      const btnText = document.getElementById('btn-text');
      const btnSpinner = document.getElementById('btn-spinner');
      const errorMessage = document.getElementById('error-message');
      const errorText = document.getElementById('error-text');
      
      // Show error message
      function showError(message) {
        errorText.textContent = message;
        errorMessage.style.display = 'block';
        setTimeout(() => {
          errorMessage.style.display = 'none';
        }, 5000);
      }
      
      // Set loading state
      function setLoading(loading) {
        loginBtn.disabled = loading;
        btnText.style.display = loading ? 'none' : 'inline';
        btnSpinner.style.display = loading ? 'block' : 'none';
      }
      
      // Handle form submission
      loginForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const email = document.getElementById('email').value;
        const password = document.getElementById('password').value;
        const remember = document.getElementById('remember').checked;
        
        setLoading(true);
        
        try {
          console.log('Attempting login for:', email);
          console.log('Supabase client:', supabase);
          
          // Sign in with Supabase
          const { data, error } = await supabase.auth.signInWithPassword({
            email: email,
            password: password
          });
          
          console.log('Login response:', { data, error });
          
          if (error) {
            throw error;
          }
          
          if (data.user) {
            // Set session cookie
            const expires = remember ? 30 : 1; // 30 days or 1 day
            document.cookie = `sb-access-token=${data.session.access_token}; max-age=${expires * 24 * 60 * 60}; path=/; samesite=strict`;
            
            // Redirect to dashboard
            window.location.href = '/';
          }
        } catch (error) {
          console.error('Login error:', error);
          showError(error.message || 'Login failed. Please try again.');
        } finally {
          setLoading(false);
        }
      });
      
      // Check if user is already logged in
      async function checkAuth() {
        try {
          const { data: { session } } = await supabase.auth.getSession();
          if (session) {
            window.location.href = '/';
          }
        } catch (error) {
          console.error('Auth check error:', error);
        }
      }
      
      // Run auth check on page load
      checkAuth();
    </script>
  </body>
</html>
